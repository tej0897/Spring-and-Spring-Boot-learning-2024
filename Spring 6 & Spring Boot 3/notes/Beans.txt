Bean:

@Bean indicates that a method produces a bean to be managed by Spring Container.

By default, bean name is same as method name.
We can specify the bean name using @Bean(name="beanName")

@Bean annotation provides "init()" and "destroy()" to perform certain actions after bean initialization or before bean destruction by a container.


_____________________________________________

Spring Bean Scopes:

@Scope Annotation:
    a. used to define a scope of a bean.
    b. Define the scope of a @Component class or a @Bean definition


@Scope types:
    * Singleton
    * prototype
    * request
    * session
    * application
    * websocket

Last 4 scopes are available only in web-aware apps.

_____________________________________________

@Lazy Annotation:

By default, Spring creates all singleton beans eagerly at the startup / bootstrapping of the application context.

We can load the Spring beans lazily (on-demand) using @Lazy annotation.

It is recommended to use Eager initialization rather than Lazy as it is better to detect all possible errors immediately rather than at runtime.

_____________________________________________
